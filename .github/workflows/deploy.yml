name: Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Get Terraform Outputs
        id: get-outputs
        working-directory: ./infra
        run: |
          TASK_DEF=$(terraform output -raw task_definition_family | grep -v '::debug::' | tr -d '\r\n')
          ECS_SERVICE=$(terraform output -raw ecs_service_name | grep -v '::debug::' | tr -d '\r\n')
          ECS_CLUSTER=$(terraform output -raw ecs_cluster_name | grep -v '::debug::' | tr -d '\r\n')
    
          if [ -z "$TASK_DEF" ] || [ -z "$ECS_SERVICE" ] || [ -z "$ECS_CLUSTER" ]; then
            echo "Error: One or more Terraform outputs are empty"
            exit 1
          fi
    
          echo "TASK_DEFINITION=$TASK_DEF" >> $GITHUB_ENV
          echo "ECS_SERVICE=$ECS_SERVICE" >> $GITHUB_ENV
          echo "ECS_CLUSTER=$ECS_CLUSTER" >> $GITHUB_ENV
    
          echo "Extracted Task Definition: '$TASK_DEF'"
          echo "Extracted ECS Service: '$ECS_SERVICE'"
          echo "Extracted ECS Cluster: '$ECS_CLUSTER'"

      - name: Verify Outputs
        run: |
          echo "Task Definition: $TASK_DEFINITION"
          echo "ECS Service: $ECS_SERVICE"
          echo "ECS Cluster: $ECS_CLUSTER"

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ env.TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
