name: Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS Credentials for Terraform
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init & Apply
        working-directory: ./infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tf_outputs
        working-directory: ./infra
        run: |
          TASK_DEF=$(terraform output -raw task_definition_family | tr -d '\r\n')
          ECS_SVC=$(terraform output -raw ecs_service_name | tr -d '\r\n')
          ECS_CLUST=$(terraform output -raw ecs_cluster_name | tr -d '\r\n')
    
          TASK_DEF_CLEAN=$(echo "$TASK_DEF" | sed 's/::debug::.*//')
          ECS_SVC_CLEAN=$(echo "$ECS_SVC" | sed 's/::debug::.*//')
          ECS_CLUST_CLEAN=$(echo "$ECS_CLUST" | sed 's/::debug::.*//')
    
          echo "TASK_DEFINITION=$TASK_DEF_CLEAN" >> $GITHUB_ENV
          echo "ECS_SERVICE=$ECS_SVC_CLEAN" >> $GITHUB_ENV
          echo "ECS_CLUSTER=$ECS_CLUST_CLEAN" >> $GITHUB_ENV

      - name: Debug Outputs
        run: |
          echo "Task Definition: $TASK_DEFINITION"
          echo "ECS Service: $ECS_SERVICE"
          echo "ECS Cluster: $ECS_CLUSTER"

      - name: Debug Outputs
        run: |
          echo "Task Definition: $TASK_DEFINITION"
          echo "ECS Service: $ECS_SERVICE"
          echo "ECS Cluster: $ECS_CLUSTER"

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ env.TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
        env:
          AWS_REGION: us-east-1
